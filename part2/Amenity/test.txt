# Test Examples for Amenity API

# 1. Register a New Amenity (POST)
curl -X POST http://localhost:5000/api/v1/amenities/ \
  -H "Content-Type: application/json" \
  -d '{
    "name": "Wi-Fi"
  }'

# Expected Response: 201 Created
# {
#   "id": "1fa85f64-5717-4562-b3fc-2c963f66afa6",
#   "name": "Wi-Fi"
# }

# 2. Register Another Amenity
curl -X POST http://localhost:5000/api/v1/amenities/ \
  -H "Content-Type: application/json" \
  -d '{
    "name": "Air Conditioning"
  }'

# 3. Retrieve All Amenities (GET)
curl -X GET http://localhost:5000/api/v1/amenities/ \
  -H "Content-Type: application/json"

# Expected Response: 200 OK
# [
#   {
#     "id": "1fa85f64-5717-4562-b3fc-2c963f66afa6",
#     "name": "Wi-Fi"
#   },
#   {
#     "id": "2fa85f64-5717-4562-b3fc-2c963f66afa6",
#     "name": "Air Conditioning"
#   }
# ]

# 4. Retrieve a Specific Amenity (GET by ID)
curl -X GET http://localhost:5000/api/v1/amenities/1fa85f64-5717-4562-b3fc-2c963f66afa6 \
  -H "Content-Type: application/json"

# Expected Response: 200 OK
# {
#   "id": "1fa85f64-5717-4562-b3fc-2c963f66afa6",
#   "name": "Wi-Fi"
# }

# 5. Update an Amenity (PUT)
curl -X PUT http://localhost:5000/api/v1/amenities/1fa85f64-5717-4562-b3fc-2c963f66afa6 \
  -H "Content-Type: application/json" \
  -d '{
    "name": "High-Speed Wi-Fi"
  }'

# Expected Response: 200 OK
# {
#   "message": "Amenity updated successfully"
# }

# 6. Test Error Cases

# Try to create amenity with empty name (400 Bad Request)
curl -X POST http://localhost:5000/api/v1/amenities/ \
  -H "Content-Type: application/json" \
  -d '{
    "name": ""
  }'

# Try to get non-existent amenity (404 Not Found)
curl -X GET http://localhost:5000/api/v1/amenities/non-existent-id \
  -H "Content-Type: application/json"

# Try to update non-existent amenity (404 Not Found)
curl -X PUT http://localhost:5000/api/v1/amenities/non-existent-id \
  -H "Content-Type: application/json" \
  -d '{
    "name": "Updated Name"
  }'
